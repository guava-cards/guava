// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Shared > Components > <DarkModeButton /> should match the snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  position: relative;
  white-space: nowrap;
  vertical-align: middle;
  outline: 2px solid transparent;
  outline-offset: 2px;
  width: auto;
  line-height: 1.2;
  border-radius: 0.25rem;
  font-weight: var(--gc-fontWeights-semibold);
  transition-property: var(--gc-transition-property-common);
  transition-duration: var(--gc-transition-duration-normal);
  box-shadow: var(--gc-shadows-sm);
  border-width: 1px;
  border-color: var(--gc-colors-mode-secondary-200);
  height: var(--gc-sizes-8);
  min-width: var(--gc-sizes-8);
  font-size: var(--gc-fontSizes-sm);
  -webkit-padding-start: 0px;
  padding-inline-start: 0px;
  -webkit-padding-end: 0px;
  padding-inline-end: 0px;
  padding: 0px;
  border: var(--gc-borders-none);
}

.emotion-0:focus,
.emotion-0[data-focus] {
  box-shadow: var(--gc-shadows-outline);
}

.emotion-0[disabled],
.emotion-0[aria-disabled=true],
.emotion-0[data-disabled] {
  opacity: 0.4;
  cursor: not-allowed;
  box-shadow: var(--gc-shadows-none);
}

.emotion-0:hover[disabled],
.emotion-0[data-hover][disabled],
.emotion-0:hover[aria-disabled=true],
.emotion-0[data-hover][aria-disabled=true],
.emotion-0:hover[data-disabled],
.emotion-0[data-hover][data-disabled] {
  background: initial;
}

<body
    class="chakra-ui-light"
  >
    <div
      id="chakra-toast-portal"
    >
      <ul
        id="chakra-toast-manager-top"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-top-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-top-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-bottom-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
    </div>
    <div>
      <button
        aria-label="Toggle dark mode"
        class="chakra-button emotion-0"
        type="button"
      >
        <svg
          aria-hidden="true"
          fill="none"
          focusable="false"
          height="1em"
          stroke="currentColor"
          viewBox="0 0 24 24"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
          />
        </svg>
      </button>
    </div>
  </body>,
  "container": .emotion-0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  position: relative;
  white-space: nowrap;
  vertical-align: middle;
  outline: 2px solid transparent;
  outline-offset: 2px;
  width: auto;
  line-height: 1.2;
  border-radius: 0.25rem;
  font-weight: var(--gc-fontWeights-semibold);
  transition-property: var(--gc-transition-property-common);
  transition-duration: var(--gc-transition-duration-normal);
  box-shadow: var(--gc-shadows-sm);
  border-width: 1px;
  border-color: var(--gc-colors-mode-secondary-200);
  height: var(--gc-sizes-8);
  min-width: var(--gc-sizes-8);
  font-size: var(--gc-fontSizes-sm);
  -webkit-padding-start: 0px;
  padding-inline-start: 0px;
  -webkit-padding-end: 0px;
  padding-inline-end: 0px;
  padding: 0px;
  border: var(--gc-borders-none);
}

.emotion-0:focus,
.emotion-0[data-focus] {
  box-shadow: var(--gc-shadows-outline);
}

.emotion-0[disabled],
.emotion-0[aria-disabled=true],
.emotion-0[data-disabled] {
  opacity: 0.4;
  cursor: not-allowed;
  box-shadow: var(--gc-shadows-none);
}

.emotion-0:hover[disabled],
.emotion-0[data-hover][disabled],
.emotion-0:hover[aria-disabled=true],
.emotion-0[data-hover][aria-disabled=true],
.emotion-0:hover[data-disabled],
.emotion-0[data-hover][data-disabled] {
  background: initial;
}

<div>
    <button
      aria-label="Toggle dark mode"
      class="chakra-button emotion-0"
      type="button"
    >
      <svg
        aria-hidden="true"
        fill="none"
        focusable="false"
        height="1em"
        stroke="currentColor"
        viewBox="0 0 24 24"
        width="1em"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
        />
      </svg>
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
