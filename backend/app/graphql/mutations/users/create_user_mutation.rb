module Mutations
  module Users
    class CreateUserMutation < BaseMutation
      description 'Creates a new user account, signs them in and sends them an activation email'
      authenticate false

      argument :name, String, "The user's full name", required: true
      argument :username, String, "The user's unique username. Will be autogenerated if not given", required: false

      field :user, Types::UserType, 'The created user account', null: true
      field :validation_errors, Types::ValidationErrorType, 'Validation errors', null: true

      def resolve(name:, username:)
        payload = AuthenticationManager.parse_token(raw_token)
        raise Errors::Unauthenticated.new, 'Invalid token' if payload.blank?

        user = User.create(
          email: payload['email'],
          firebase_uid: paylaod['sub'],
          name: name,
          username: username
        )

        user.save ? { user: user } : { errors: user.errors }
      end
    end
  end
end
