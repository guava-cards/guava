module Mutations
  module Users
    class CreateUserMutation < BaseMutation
      description 'Creates a new user account, signs them in and sends them an activation email'
      authenticate false

      argument :email, String, "The email address associated with the user's account", required: true
      argument :name, String, "The user's full name", required: true
      argument :password, String, "The user's password", required: true
      argument :username, String, "The user's unique username. Will be autogenerated if not given", required: false

      field :auth_token, Types::AuthTokenType, 'The auth token for the new user session', null: true
      field :user, Types::UserType, 'The created user account', null: true
      field :validation_errors, Types::ValidationErrorType, 'Validation errors', null: true

      def resolve(email:, name:, password:, username:)
        user = User.create(email: email, name: name, password: password, username: username)

        if user.save
          auth_token = JwtAuth.create_auth_token_for_user(user)
          context.assign_auth_token_cookies(auth_token)

          { user: user, auth_token: auth_token }
        else
          { errors: user.errors }
        end
      end
    end
  end
end
